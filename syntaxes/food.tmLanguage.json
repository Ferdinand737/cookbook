{
  "name": "food",
  "scopeName": "source.food",
  "fileTypes": [
    "food"
  ],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#types"
    },
    {
      "include": "#builtins"
    },
    {
      "include": "#actions"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#variables"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.food",
          "match": "//.*$"
        },
        {
          "name": "comment.block.food",
          "begin": "/\\*",
          "end": "\\*/",
          "patterns": [
            {
              "include": "#comments"
            }
          ]
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.food",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.food",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.declaration.food",
          "match": "\\b(?:recipe|step|ingredient|utensil|fn|new|return)\\b"
        },
        {
          "name": "keyword.control.food",
          "match": "\\b(?:if|else|for|while|in|break|continue|await)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "support.class.food",
          "match": "\\b(?:Bowl|Pan|Oven|Knife|Timer|Mixer|Blender|Pot|Skillet|Whisk|BakingSheet|Saucepan|AirFryer|RiceCooker|BakingDish|CasseroleDish|DeepFryer|GlassDish|Grater|ImmersionBlender|KitchenString|MeatMallet|PotatoRicer|RoastingPan|RoastingPot|RollingPin|Sieve|SpatzleMaker|Flour|Sugar|Salt|Butter|Eggs|Egg|Milk|Water|Oil|Vanilla|ChocolateChips|Cinnamon|BakingPowder|BakingSoda|Yeast|BrownSugar|GroundBeef|Cornstarch|Onion|BlackPepper|VegetableOil|PineappleJuice|SoySauce|WhiteVinegar|Pineapple|GreenPepper|Carrot|ChickenBreast|BellPepper|Garlic|SesameOil|OliveOil|OnionPowder|GarlicPowder|FrozenStirFryVeggies|Rice|Anchovies|AnchovyPaste|Apple|BayLeaf|BreadRoll|Broccoli|Broth|BrothCube|Capers|CarawaySeeds|Celery|CeleryRoot|Chicken|ChiliPepper|Chives|Cognac|CookedHam|CornedBeef|Cream|CreamQuark|CreamYogurt|Cucumber|Curry|CurrySauceMix|Dill|DryYeast|Duck|Eggplant|EggYolk|Emmental|Fat|GoulashMeat|GratedCheese|GreenPeppercorns|GroundMeat|Ham|HardBoiledEgg|HeavyCream|InstantBroth|ItalianHerbs|LasagnaNoodles|Leek|LemonJuice|Lentils|LongGrainRice|Margarine|MeatBroth|MeatBrothCube|MeatSoup|MixedSpices|Mozzarella|Mushroom|Mustard|Nutmeg|OnionSeasoning|Orange|OrangeJuice|OrangePeel|Paprika|Parmesan|Parsley|PeachHalves|Peas|Pork|PorkSchnitzel|PorkTenderloin|Potato|RootVegetables|Rosemary|Salami|Sausage|Schnitzel|SmokedBacon|SmokedSausage|SourCream|Thyme|Tomato|TomatoCan|TomatoPaste|Vinegar|WhiteWine|YellowTurnip|Zucchini)\\b"
        }
      ]
    },
    "builtins": {
      "patterns": [
        {
          "name": "support.function.builtin.food",
          "match": "\\b(?:wait|transfer|season|sprinkle|cool|soak|squeeze_dry|rinse|drain|peel|grate|squeeze|divide|fill|stuff|rub|dry|freeze|wash|hollow_out|remove_from_broth|settle)\\b(?=\\s*\\()"
        }
      ]
    },
    "actions": {
      "patterns": [
        {
          "name": "support.function.method.food",
          "match": "\\.\\b(?:add|mix|stir|fold|whisk|pour|form|drain|sprinkle|preheat|bake|roast|broil|heatTo|heat|boil|simmer|saute|fry|brown|chop|dice|slice|mince|set|start|stop)\\b(?=\\s*\\()"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "meta.function.food",
          "begin": "\\b(fn)\\b\\s+([A-Za-z_][\\w]*)\\s*(?=\\()",
          "beginCaptures": {
            "1": {
              "name": "keyword.declaration.food"
            },
            "2": {
              "name": "entity.name.function.food"
            }
          },
          "end": "(?=\\()"
        },
        {
          "name": "entity.name.function.food",
          "match": "\\b([A-Za-z_][\\w]*)\\b(?=\\s*\\()"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.property.food",
          "match": "\\.(?:[A-Za-z_][\\w]*)"
        },
        {
          "name": "variable.other.food",
          "match": "\\b[a-z_][A-Za-z0-9_]*\\b"
        }
      ]
    }
  }
}